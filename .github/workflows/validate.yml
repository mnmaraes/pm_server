# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: 
      - master
      - develop
  pull_request:
    branches: 
      - master
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
    
    - name: Cache node modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    # Runs a single command using the runners shell
    - name: Install Things
      run: yarn install --frozen-lockfile

    # Runs a set of commands using the runners shell
    - name: Validates our build
      run: yarn run validate
      env:
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: postgres
        # The default PostgreSQL port
        POSTGRES_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        TEST_DB_NAME: postgres

    - name: Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        # User defined upload name. Visible in Codecov UI
        name: Murillo
        # Path to coverage file to upload
        file: './coverage/coverage-final.json'
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: false
